/*
SPDX-License-Identifier: CC-BY-4.0
SmartContract para atribuição de nota - Feito por Elayne Nascimento 
*/ 
pragma solidity 0.8.4;

contract prestacaodeservicosdetelefonia {
    
    struct servicocontratado { //estrutura com os dados personalizados necessários para realização do contrato
        string nomedacontratante; //nome da contratante
        uint idadedacontratante; //idade da contratante
        uint CPFdacontratante; //CPF da contratante
        bool clienteantigo; // cliente possui outros produtos da companhia? true=Sim, cliente antigo / false=não cliente novo
        }
        
    uint constant valormensaldocontrato = 250; //constante com o valor inicial do contratos
    uint constant mesesdefidelidade = 12; //constante com os 12 meses de mesesdefidelidade
    uint constant descontoclienteantigo = 5; // constante com 5% de desconto para clientes que já possuem outros produtos da companhia
        
        address public owner;
        
        servicocontratado[] public servicos; 
        //array - Criação de uma pasta com os dados da estrutura do serviço contratado, declarado acima em "struct"
        
    struct contratada { //estrutura com os dados cadastrais da empresa contratada
        string nomedaempresa; 
        string endereco;
        uint CNPJ;
        }
    
    constructor() {
        owner = msg.sender; //atribuição da publicação do contrato ao proprietário do contrato, ninguém mais pode publicar um contrato.
        }
    
    function registroservicocontratado( //função para criação de variáveis externas para registro do contrato
        string memory camponomecontratante
        ,uint campoidadecontratante
        ,uint campoCPFcontratante
        ,bool campoclienteantigo
    ) 
    
    external returns (bool) { 
        //função pública destinada aos usuários do sistema para preenchimento dos dados pessoais para o contrato
        //retorno booleano para confirmação do envio dos dados (true)
        require(msg.sender == owner, "somente o proprietario do contrato pode registrar novos contratos");
        //requerimento que permite apenas o registro de um novo contrato pelo proprietário  
        require(campoidadecontratante >= 18, "a contratante deve possuir mais de 18 anos");
        //requerimento que permite apenas a publicação de um novo contrato para clientes com idade igual ou superior à 18 anos
        servicocontratado memory novocontrato = servicocontratado(camponomecontratante, campoidadecontratante, campoCPFcontratante, campoclienteantigo);
        //criação das variáveis na estrutura do serviço contratado
     servicos.push(novocontrato);
     //registro das variáveis na biblioteca "array"
     return true;
     //confirmação da operação realizada com sucesso.
    }
    
    }    
